<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:cluster="http://www.mulesoft.org/schema/mule/ee/cluster" xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:context="http://www.springframework.org/schema/context" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd">
    <context:property-placeholder location="flights-${env}.properties"/>
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="${http.port}" doc:name="HTTP Listener Configuration"/>
    <http:request-config name="United_HTTP_Request_Configuration" host="${united.host}" port="80" doc:name="HTTP Request Configuration"/>
    <http:request-config name="American_HTTP_Request_Configuration" host="training-american-ws.cloudhub.io" port="80" basePath="/api/" doc:name="HTTP Request Configuration">
        <http:raml-api-configuration location="https://anypoint.mulesoft.com/exchange/api/v1/organizations/68ef9520-24e9-4cf2-b2f5-620025690913/assets/68ef9520-24e9-4cf2-b2f5-620025690913/training-american-flights-api/1.0.0/api/root"/>
    </http:request-config>
    <ws:consumer-config name="Delta_Web_Service_Consumer" wsdlLocation="http://mu.mulesoft-training.com/essentials/delta?wsdl" service="TicketServiceService" port="TicketServicePort" serviceAddress="http://training-u.cloudhub.io/essentials/delta" doc:name="Web Service Consumer"/>
    <configuration defaultExceptionStrategy-ref="Choice_Exception_Strategy" doc:name="Configuration">
        <http:config useTransportForUris="false"/>
    </configuration>
    <payload-type-filter expectedType="java.util.ArrayList" name="Filter_Not_ArrayList" doc:name="Payload"/>
        <not-filter doc:name="Not" name="invalidUriPath">
            <message-property-filter pattern="http.request.path=/api/favicon.ico" caseSensitive="true" scope="inbound"/>
        </not-filter>
    <message-property-filter pattern="http.method=GET" caseSensitive="true" scope="inbound" doc:name="http.methodGETFlow" name="invalidMethod"/>
    <message-property-filter pattern="http.request.path=/api/flights" caseSensitive="true" scope="inbound" doc:name="http.request.pathGETFlow" name="invalidRestResource"/>
    <and-filter name="invalidMethodAndInvalidRestResource" doc:name="And">
        <filter ref="invalidMethod"/>
        <filter ref="invalidRestResource"/>
    </and-filter>
    <choice-exception-strategy name="Choice_Exception_Strategy">
            <catch-exception-strategy when="#[exception.causedBy(java.lang.IllegalArgumentException)]" doc:name="No destination code set">
            	<set-payload value="#[exception.message]" doc:name="Set Payload"/>
            	<set-property propertyName="http.status" value="400" doc:name="Property"/>
            	<logger level="INFO" doc:name="Logger"/>
       		</catch-exception-strategy>
            <catch-exception-strategy when="#[exception.causeMatches('com.mulesoft.weave.*')]" doc:name="No flights &#8211; DW exception">
                <set-payload value="NO FLIGHTS to #[flowVars.code +  '\n' + exception]" doc:name="Set Payload"/>
                <set-property propertyName="http.status" value="400" doc:name="Property"/>
                <logger level="INFO" doc:name="Logger"/>
            </catch-exception-strategy>
        <catch-exception-strategy doc:name="Data unavailable &#8211; all other exceptions">
            <set-payload value="DATA IS UNAVAILABLE. TRY LATER. #['\n' + exception] " doc:name="Set Payload"/>
            <set-property propertyName="http.status" value="500" doc:name="Property"/>
            <logger level="INFO" doc:name="Logger"/>
        </catch-exception-strategy>

        </choice-exception-strategy>
    <flow name="invalidUriPathFlow">
        <set-property propertyName="http.status" value="404" doc:name="404"/>
        <set-payload value="{ &quot;message&quot;: &quot;Invalid URI path&quot; }" mimeType="application/json" doc:name="Set Payload"/>
        <logger message="#[message.payloadAs(java.lang.String)]" level="WARN" category="com.mulesoft.training.flights.api" doc:name="Logger"/>
    </flow>
    <flow name="invalidMethodFlow">
        <set-property propertyName="http.status" value="404" doc:name="404"/>
        <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" mimeType="application/json" doc:name="Set Payload"/>
        <logger message="#[message.payloadAs(java.lang.String)]" level="WARN" category="com.mulesoft.training.flights.api" doc:name="Logger"/>
    </flow>
    <flow name="invalidRequestFlow">
        <set-property propertyName="http.status" value="404" doc:name="404"/>
        <set-payload value="{ &quot;message&quot;: &quot;Invalid request&quot; }" doc:name="Set Payload" mimeType="application/json"/>
        <logger message="#[message.payloadAs(java.lang.String)]" level="WARN" category="com.mulesoft.training.flights.api" doc:name="Logger"/>
    </flow>
    <flow name="noFlightsFoundFlow">
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	airlineName: flowVars.responseAirline,
	availableSeats: -1,
	departureDate: "",
	destination: "",
	flightCode: flowVars.code,
	origination: "",
	planeType: "",
	price: -1
} as :object {
	class : "com.mulesoft.training.Flight"
}]]></dw:set-payload>
        </dw:transform-message>
        <set-property propertyName="http.status" value="201" doc:name="201"/>
        <logger message="#[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
    </flow>
        
</mule>
